class Vehicle{
    String brand;
    int speed;
      
    Vehicle(String brand,int speed){
        this.brand=brand;
        this.speed=speed;
    }
    
    public void displayInfo(){
        System.out.println("Brand name:-"+brand);
        System.out.println("Speed of this brnad:-"+speed);
    }
}

class Car extends Vehicle{
    int doors;
    
    Car(String brand,int speed,int doors){
        super(brand,speed);
        this.doors=doors;
    }
    
    public void showCarDetails(){
        displayInfo();
        System.out.println("Number of doors:"+doors);
    }
}
class Bike extends Vehicle{
    boolean hasGear;
    
    Bike(String brand,int speed,boolean hasGear){
        super(brand,speed);
        this.hasGear=hasGear;
    }
    
    public void showBikeDetails(){
        displayInfo();
        System.out.println("Bike has gears:-"+hasGear);
    }
    
}    
 
class Main {
    public static void main(String[] args) {
      Car c=new Car("Toyato",120,4);
      Bike b=new Bike("Yamaha",80,true);
      
      System.out.println("---car Details---");
      c.showCarDetails();
      
      System.out.println("---Bike Details---");
      b.showBikeDetails();
      
    }
}


Output:-
---car Details---
Brand name:-Toyato
Speed of this brnad:-120
Number of doors:4
---Bike Details---
Brand name:-Yamaha
Speed of this brnad:-80
Bike has gears:-true


Concepts:-
Inheritance:- Inheritance is a process of creating new classes by using the properties of old classes.
The newly formed classes is known as child class or derived class and the older class are known as parent class or base class.
It provides us reusability

Types:-
1.Single Inheritance 2.Multiple Inheritance 3.Multilevel Inheritance 4.Hierarchical Inheritance 5.Hybrid Inheritance

Java does not support multiple inheritance because it leads to ambiguity and most famous problem dimond problem.

Hierarchical inheritance:-
Multiple classes are inheits from a single base class

